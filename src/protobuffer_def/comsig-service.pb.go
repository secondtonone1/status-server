// Code generated by protoc-gen-go. DO NOT EDIT.
// source: comsig-service.proto

package protobuffer_def // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 呼叫通知
type SingleCallNotify struct {
	CallerId             string   `protobuf:"bytes,1,opt,name=caller_id,json=callerId,proto3" json:"caller_id,omitempty"`
	CallerName           string   `protobuf:"bytes,2,opt,name=caller_name,json=callerName,proto3" json:"caller_name,omitempty"`
	CallerPhone          string   `protobuf:"bytes,3,opt,name=caller_phone,json=callerPhone,proto3" json:"caller_phone,omitempty"`
	CallerAvator         string   `protobuf:"bytes,4,opt,name=caller_avator,json=callerAvator,proto3" json:"caller_avator,omitempty"`
	MediaType            string   `protobuf:"bytes,5,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	ChatRoomId           string   `protobuf:"bytes,6,opt,name=chat_room_id,json=chatRoomId,proto3" json:"chat_room_id,omitempty"`
	DeviceModel          string   `protobuf:"bytes,7,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	AnswerId             string   `protobuf:"bytes,8,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleCallNotify) Reset()         { *m = SingleCallNotify{} }
func (m *SingleCallNotify) String() string { return proto.CompactTextString(m) }
func (*SingleCallNotify) ProtoMessage()    {}
func (*SingleCallNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_comsig_service_46427face7ade566, []int{0}
}
func (m *SingleCallNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleCallNotify.Unmarshal(m, b)
}
func (m *SingleCallNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleCallNotify.Marshal(b, m, deterministic)
}
func (dst *SingleCallNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleCallNotify.Merge(dst, src)
}
func (m *SingleCallNotify) XXX_Size() int {
	return xxx_messageInfo_SingleCallNotify.Size(m)
}
func (m *SingleCallNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleCallNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SingleCallNotify proto.InternalMessageInfo

func (m *SingleCallNotify) GetCallerId() string {
	if m != nil {
		return m.CallerId
	}
	return ""
}

func (m *SingleCallNotify) GetCallerName() string {
	if m != nil {
		return m.CallerName
	}
	return ""
}

func (m *SingleCallNotify) GetCallerPhone() string {
	if m != nil {
		return m.CallerPhone
	}
	return ""
}

func (m *SingleCallNotify) GetCallerAvator() string {
	if m != nil {
		return m.CallerAvator
	}
	return ""
}

func (m *SingleCallNotify) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

func (m *SingleCallNotify) GetChatRoomId() string {
	if m != nil {
		return m.ChatRoomId
	}
	return ""
}

func (m *SingleCallNotify) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *SingleCallNotify) GetAnswerId() string {
	if m != nil {
		return m.AnswerId
	}
	return ""
}

func init() {
	proto.RegisterType((*SingleCallNotify)(nil), "SingleCallNotify")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ComSigServerClient is the client API for ComSigServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComSigServerClient interface {
	BaseInterface(ctx context.Context, in *BaseRequest, opts ...grpc.CallOption) (*BaseResponse, error)
}

type comSigServerClient struct {
	cc *grpc.ClientConn
}

func NewComSigServerClient(cc *grpc.ClientConn) ComSigServerClient {
	return &comSigServerClient{cc}
}

func (c *comSigServerClient) BaseInterface(ctx context.Context, in *BaseRequest, opts ...grpc.CallOption) (*BaseResponse, error) {
	out := new(BaseResponse)
	err := c.cc.Invoke(ctx, "/ComSigServer/BaseInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComSigServerServer is the server API for ComSigServer service.
type ComSigServerServer interface {
	BaseInterface(context.Context, *BaseRequest) (*BaseResponse, error)
}

func RegisterComSigServerServer(s *grpc.Server, srv ComSigServerServer) {
	s.RegisterService(&_ComSigServer_serviceDesc, srv)
}

func _ComSigServer_BaseInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComSigServerServer).BaseInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ComSigServer/BaseInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComSigServerServer).BaseInterface(ctx, req.(*BaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ComSigServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ComSigServer",
	HandlerType: (*ComSigServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BaseInterface",
			Handler:    _ComSigServer_BaseInterface_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "comsig-service.proto",
}

func init() {
	proto.RegisterFile("comsig-service.proto", fileDescriptor_comsig_service_46427face7ade566)
}

var fileDescriptor_comsig_service_46427face7ade566 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4f, 0xc2, 0x40,
	0x10, 0x85, 0x05, 0x15, 0x61, 0x2d, 0x89, 0xae, 0x1c, 0x2a, 0xc6, 0x88, 0x78, 0xf1, 0x62, 0x49,
	0xf4, 0x68, 0x62, 0x22, 0x9c, 0x7a, 0x90, 0x18, 0xf0, 0xe4, 0xa5, 0x19, 0xba, 0xd3, 0xd2, 0xa4,
	0xdb, 0xa9, 0xbb, 0x0b, 0xa6, 0x3f, 0xc5, 0x7f, 0x6b, 0xba, 0xbb, 0x1e, 0x3c, 0xce, 0xf7, 0xde,
	0x4b, 0xde, 0xcb, 0xb0, 0x51, 0x4a, 0x52, 0x17, 0xf9, 0x83, 0x46, 0xb5, 0x2f, 0x52, 0x8c, 0x6a,
	0x45, 0x86, 0xc6, 0x97, 0x39, 0x51, 0x5e, 0xe2, 0xcc, 0x5e, 0x9b, 0x5d, 0x36, 0x83, 0xaa, 0xf1,
	0xd2, 0x48, 0x1b, 0x30, 0x3b, 0xfd, 0x3f, 0x30, 0xfd, 0xe9, 0xb2, 0xb3, 0x75, 0x51, 0xe5, 0x25,
	0x2e, 0xa0, 0x2c, 0x97, 0x64, 0x8a, 0xac, 0xe1, 0x57, 0x6c, 0x90, 0x42, 0x59, 0xa2, 0x4a, 0x0a,
	0x11, 0x76, 0x26, 0x9d, 0xfb, 0xc1, 0xaa, 0xef, 0x40, 0x2c, 0xf8, 0x0d, 0x3b, 0xf5, 0x62, 0x05,
	0x12, 0xc3, 0xae, 0x95, 0x99, 0x43, 0x4b, 0x90, 0xc8, 0x6f, 0x59, 0xe0, 0x0d, 0xf5, 0x96, 0x2a,
	0x0c, 0x0f, 0xad, 0xc3, 0x87, 0xde, 0x5b, 0xc4, 0xef, 0xd8, 0xd0, 0x5b, 0x60, 0x0f, 0x86, 0x54,
	0x78, 0x64, 0x3d, 0x3e, 0xf7, 0x6a, 0x19, 0xbf, 0x66, 0x4c, 0xa2, 0x28, 0x20, 0x31, 0x4d, 0x8d,
	0xe1, 0xb1, 0x75, 0x0c, 0x2c, 0xf9, 0x68, 0x6a, 0xe4, 0x13, 0x16, 0xa4, 0x5b, 0x30, 0x89, 0x22,
	0x92, 0x6d, 0xcf, 0x9e, 0x2f, 0xb2, 0x05, 0xb3, 0x22, 0x92, 0xb1, 0x68, 0x8b, 0x08, 0x6c, 0xb7,
	0x26, 0x92, 0x04, 0x96, 0xe1, 0x89, 0x2b, 0xe2, 0xd8, 0x5b, 0x8b, 0xda, 0xa5, 0x50, 0xe9, 0x6f,
	0xb7, 0xb4, 0xef, 0x96, 0x3a, 0x10, 0x8b, 0xc7, 0x17, 0x16, 0x2c, 0x48, 0xae, 0x8b, 0x7c, 0x8d,
	0x6a, 0x8f, 0x8a, 0x47, 0x6c, 0x38, 0x07, 0x8d, 0x71, 0x65, 0x50, 0x65, 0x90, 0x22, 0x0f, 0xa2,
	0xf6, 0x5e, 0xe1, 0xd7, 0x0e, 0xb5, 0x19, 0x0f, 0xfd, 0xa5, 0x6b, 0xaa, 0x34, 0x4e, 0x0f, 0xe6,
	0x17, 0x9f, 0xe7, 0xd1, 0xf3, 0xdf, 0x27, 0x32, 0x54, 0x89, 0xc0, 0x6c, 0xd3, 0xb3, 0xe0, 0xe9,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x93, 0x21, 0xeb, 0xaf, 0xc0, 0x01, 0x00, 0x00,
}
